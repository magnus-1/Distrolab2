@using community.Models 
@using community.Models.ViewModels 
@model community.Models.ViewModels.GroupViewModels.GroupVM

@{ Layout = "~/Views/Shared/_Layout.cshtml"; }

<h2>@Model.Title </h2>

<!--<form id="postMessage" asp-controller="Group" asp-action="/Group/PostMessageToGroup" method="post" class="form-horizontal">
	<input name="text" asp-for="Message" class="form-control" />
	<button type="submit" class="btn btn-default" value="@Model.GroupId" >Submit</button>
</form>-->

<form id="postMessage" action="/Group/PostMessageToGroup" method="post" class="form-horizontal">
<input name="title" type="text" class="form-control" />
	<input name="text" type="text" class="form-control" />
	<button name="groupId" type="submit" class="btn btn-default" value="@Model.GroupId">Submit</button>
</form>






  <table id="messageTable" class="table">
<tr>
    <th>Title</th>
    <th>From</th> 
    <th>Date</th> 
    <th>Content: </th>
  </tr>

	@foreach (var msg in Model.Messages) {

	<tr>
		<td>
			@Html.DisplayFor(modelMsg => msg.Title)
		</td>
		<td>
			@Html.DisplayFor(modelMsg => msg.SenderName)
		</td>
  <td>
			@Html.DisplayFor(modelMsg => msg.time)
		</td>
    <td>
			@Html.DisplayFor(modelMsg => msg.Content)
		</td>

	</tr>

	}
</table>

@section scripts {
  <script>
// Attach a submit handler to the form

$( "#postMessage" ).submit(function( event ) {
 
  // Stop form from submitting normally
  event.preventDefault();
 
  // Get some values from elements on the page:
  var $form = $( this ),
    message = $form.find( "input[name='text']" ).val(),
    title = $form.find( "input[name='title']" ).val(),
    groupId = @Model.GroupId,
    url1 = $form.attr( "action" );
 
console.log("Values for title in script = " + title ); // John
 console.log("Values for message in script = " + message ); // John
  console.log("Values for groupId in script = " + groupId ); // 2pm
  // Send the data using post
  var data = {groupId: groupId, title: title , content: message };
  //var posting = $.post( url,data );
 var posting = $.post({
      type: "POST",
      url: url1,
      data: JSON.stringify(data),
      contentType:  "application/json",
      dataType: "json",
      success: function(msg) {
        if(msg.wasSent) {
          var message = msg.message;

           $( "#messageTable" ).append('<tr><td>'+message.title+'</td><td>'+message.senderName+'</td> <td>'+message.time+'</td> <td>'+message.content+'</td>  </tr>');
          
        }else {
          alert("failed msg:" + msg.errormessage);
          if(msg.url) {
            window.location.href = msg.url;
          }
        }
      }
  });
  // Put the results in a div
  
  //posting.done(function( data ) {
  //var content = $( data ).find( "#content" );
  //$( "#result" ).empty().append( content );
  //});
});

$( "myrow" ).click( function( event) {
    event.preventDefault();
    var a = $( this ).find( "button[name='msgid']" ).val();
    //alert("myrow: " + a);
    var btn =$( this ).find( "button[name='msgid']" );
    
    var data = {
          id : a,
          content : "msg"  
  };
  var url1 = '@Url.Action("GetMessageBody","ReadMessages")';
  var posting = $.post({
      type: "POST",
      url: url1,
      data: JSON.stringify(data),
      contentType:  "application/json",
      dataType: "json",
      success: function(msg) {
          btn.hide();
          $("#message-" + a ).html(msg.content).show()
          //alert(msg.name);
      }
  });

    
});
</script>
}